/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package piat.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int FECHA = 4;
  /** RegularExpression Id. */
  int HORA = 5;
  /** RegularExpression Id. */
  int ANY = 6;
  /** RegularExpression Id. */
  int NUMERO = 7;
  /** RegularExpression Id. */
  int LETRA = 8;
  /** RegularExpression Id. */
  int IDENTIFICADOR_TRAZA = 9;
  /** RegularExpression Id. */
  int PUNTO = 10;
  /** RegularExpression Id. */
  int DOS_PUNTOS = 11;
  /** RegularExpression Id. */
  int GUION = 12;
  /** RegularExpression Id. */
  int GUION_BAJO = 13;
  /** RegularExpression Id. */
  int ARROBA = 14;
  /** RegularExpression Id. */
  int IGUAL = 15;
  /** RegularExpression Id. */
  int ABRE_PARENTESIS = 16;
  /** RegularExpression Id. */
  int CIERRA_PARENTESIS = 17;
  /** RegularExpression Id. */
  int COMA = 18;
  /** RegularExpression Id. */
  int MENOR_QUE = 19;
  /** RegularExpression Id. */
  int MAYOR_QUE = 20;
  /** RegularExpression Id. */
  int BOUNCED = 21;
  /** RegularExpression Id. */
  int OVERLOAD = 22;
  /** RegularExpression Id. */
  int BAD = 23;
  /** RegularExpression Id. */
  int EOL = 24;
  /** RegularExpression Id. */
  int MSA = 25;
  /** RegularExpression Id. */
  int SMTP_IN = 26;
  /** RegularExpression Id. */
  int SMTP_OUT = 27;
  /** RegularExpression Id. */
  int SEC = 28;
  /** RegularExpression Id. */
  int USER_MAILBOX = 29;
  /** RegularExpression Id. */
  int INFECTED = 30;
  /** RegularExpression Id. */
  int SEC_PASSED = 31;
  /** RegularExpression Id. */
  int REMIT = 32;
  /** RegularExpression Id. */
  int DOM = 33;
  /** RegularExpression Id. */
  int FROM = 34;
  /** RegularExpression Id. */
  int RELAY_TO = 35;
  /** RegularExpression Id. */
  int SPAM = 36;
  /** RegularExpression Id. */
  int UNEXPECTED = 37;

  /** Lexical state. */
  int PASS = 0;
  /** Lexical state. */
  int OUT = 1;
  /** Lexical state. */
  int GEN = 2;
  /** Lexical state. */
  int SECURITY = 3;
  /** Lexical state. */
  int SERVER = 4;
  /** Lexical state. */
  int DEFAULT = 5;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "<FECHA>",
    "<HORA>",
    "<ANY>",
    "<NUMERO>",
    "<LETRA>",
    "<IDENTIFICADOR_TRAZA>",
    "\".\"",
    "\":\"",
    "\"-\"",
    "\"_\"",
    "\"@\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"<\"",
    "\">\"",
    "\"bounced from:\"",
    "\"(overload)\"",
    "\"(bad destination mailbox address)\"",
    "\"\\n\"",
    "\"msa\"",
    "\"smtp-in\"",
    "\"smtp-out\"",
    "<SEC>",
    "\"user-mailbox\"",
    "\"security-antivirus: INFECTED\"",
    "\"SEC-PASSED:\"",
    "<REMIT>",
    "<DOM>",
    "\"message from:\"",
    "\"relay to:\"",
    "\"security-antispam: SPAM\"",
    "<UNEXPECTED>",
  };

}
