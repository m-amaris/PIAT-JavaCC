/* ParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package piat.javacc;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_5(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x300000L) != 0L)
         {
            jjmatchedKind = 7;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 2:
         if ((active0 & 0x300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active0 & 0x300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 4:
         if ((active0 & 0x300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 5:
         if ((active0 & 0x300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 6:
         if ((active0 & 0x300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 7:
         if ((active0 & 0x300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 8:
         if ((active0 & 0x300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 9:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 10:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 11:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 12:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_5(int pos, long active0){
   return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_5(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 23);
      case 40:
         jjmatchedKind = 15;
         return jjMoveStringLiteralDfa1_5(0x400000L);
      case 41:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 17);
      case 45:
         return jjStopAtPos(0, 11);
      case 46:
         return jjStopAtPos(0, 9);
      case 58:
         return jjStopAtPos(0, 10);
      case 60:
         return jjStopAtPos(0, 18);
      case 61:
         return jjStopAtPos(0, 14);
      case 62:
         return jjStopAtPos(0, 19);
      case 64:
         return jjStopAtPos(0, 13);
      case 95:
         return jjStopAtPos(0, 12);
      case 98:
         return jjMoveStringLiteralDfa1_5(0x100000L);
      case 111:
         return jjMoveStringLiteralDfa1_5(0x200000L);
      default :
         return jjMoveNfa_5(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_5(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa2_5(active0, 0x400000L);
      case 111:
         return jjMoveStringLiteralDfa2_5(active0, 0x100000L);
      case 118:
         return jjMoveStringLiteralDfa2_5(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_5(0, active0);
}
private int jjMoveStringLiteralDfa2_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_5(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa3_5(active0, 0x200000L);
      case 117:
         return jjMoveStringLiteralDfa3_5(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_5(1, active0);
}
private int jjMoveStringLiteralDfa3_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_5(active0, 0x400000L);
      case 110:
         return jjMoveStringLiteralDfa4_5(active0, 0x100000L);
      case 114:
         return jjMoveStringLiteralDfa4_5(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_5(2, active0);
}
private int jjMoveStringLiteralDfa4_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa5_5(active0, 0x400000L);
      case 99:
         return jjMoveStringLiteralDfa5_5(active0, 0x100000L);
      case 108:
         return jjMoveStringLiteralDfa5_5(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_5(3, active0);
}
private int jjMoveStringLiteralDfa5_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa6_5(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa6_5(active0, 0x100000L);
      case 111:
         return jjMoveStringLiteralDfa6_5(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_5(4, active0);
}
private int jjMoveStringLiteralDfa6_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_5(active0, 0x200000L);
      case 100:
         return jjMoveStringLiteralDfa7_5(active0, 0x100000L);
      case 101:
         return jjMoveStringLiteralDfa7_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(5, active0);
}
private int jjMoveStringLiteralDfa7_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa8_5(active0, 0x100000L);
      case 100:
         return jjMoveStringLiteralDfa8_5(active0, 0x200000L);
      case 115:
         return jjMoveStringLiteralDfa8_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(6, active0);
}
private int jjMoveStringLiteralDfa8_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(8, 21);
         break;
      case 102:
         return jjMoveStringLiteralDfa9_5(active0, 0x100000L);
      case 116:
         return jjMoveStringLiteralDfa9_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(7, active0);
}
private int jjMoveStringLiteralDfa9_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(7, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa10_5(active0, 0x400000L);
      case 114:
         return jjMoveStringLiteralDfa10_5(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_5(8, active0);
}
private int jjMoveStringLiteralDfa10_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(8, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa11_5(active0, 0x400000L);
      case 111:
         return jjMoveStringLiteralDfa11_5(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_5(9, active0);
}
private int jjMoveStringLiteralDfa11_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(9, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(10, active0);
      return 11;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa12_5(active0, 0x400000L);
      case 109:
         return jjMoveStringLiteralDfa12_5(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_5(10, active0);
}
private int jjMoveStringLiteralDfa12_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(10, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(11, active0);
      return 12;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(12, 20);
         break;
      case 116:
         return jjMoveStringLiteralDfa13_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(11, active0);
}
private int jjMoveStringLiteralDfa13_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(11, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(12, active0);
      return 13;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa14_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(12, active0);
}
private int jjMoveStringLiteralDfa14_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(12, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(13, active0);
      return 14;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa15_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(13, active0);
}
private int jjMoveStringLiteralDfa15_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(13, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(14, active0);
      return 15;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa16_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(14, active0);
}
private int jjMoveStringLiteralDfa16_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(14, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(15, active0);
      return 16;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa17_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(15, active0);
}
private int jjMoveStringLiteralDfa17_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(15, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(16, active0);
      return 17;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa18_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(16, active0);
}
private int jjMoveStringLiteralDfa18_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(16, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(17, active0);
      return 18;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa19_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(17, active0);
}
private int jjMoveStringLiteralDfa19_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(17, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(18, active0);
      return 19;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa20_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(18, active0);
}
private int jjMoveStringLiteralDfa20_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(18, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(19, active0);
      return 20;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa21_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(19, active0);
}
private int jjMoveStringLiteralDfa21_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(19, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(20, active0);
      return 21;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa22_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(20, active0);
}
private int jjMoveStringLiteralDfa22_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(20, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(21, active0);
      return 22;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa23_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(21, active0);
}
private int jjMoveStringLiteralDfa23_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(21, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(22, active0);
      return 23;
   }
   switch(curChar)
   {
      case 120:
         return jjMoveStringLiteralDfa24_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(22, active0);
}
private int jjMoveStringLiteralDfa24_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(22, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(23, active0);
      return 24;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa25_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(23, active0);
}
private int jjMoveStringLiteralDfa25_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(23, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(24, active0);
      return 25;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa26_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(24, active0);
}
private int jjMoveStringLiteralDfa26_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(24, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(25, active0);
      return 26;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa27_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(25, active0);
}
private int jjMoveStringLiteralDfa27_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(25, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(26, active0);
      return 27;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa28_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(26, active0);
}
private int jjMoveStringLiteralDfa28_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(26, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(27, active0);
      return 28;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa29_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(27, active0);
}
private int jjMoveStringLiteralDfa29_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(27, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(28, active0);
      return 29;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa30_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(28, active0);
}
private int jjMoveStringLiteralDfa30_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(28, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(29, active0);
      return 30;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa31_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(29, active0);
}
private int jjMoveStringLiteralDfa31_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(29, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(30, active0);
      return 31;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa32_5(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_5(30, active0);
}
private int jjMoveStringLiteralDfa32_5(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_5(30, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(31, active0);
      return 32;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(32, 22);
         break;
      default :
         break;
   }
   return jjStartNfa_5(31, active0);
}
private int jjMoveNfa_5(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 23;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjAddStates(3, 4); }
                  break;
               case 3:
                  if (curChar == 58 && kind > 8)
                     kind = 8;
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 12:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L && kind > 4)
                     kind = 4;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 16:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x3ff000000000000L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  { jjCheckNAdd(22); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  else if (curChar == 91)
                     { jjCheckNAdd(2); }
                  break;
               case 1:
                  if (curChar == 91)
                     { jjCheckNAdd(2); }
                  break;
               case 2:
                  if ((0x7fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(2, 4); }
                  break;
               case 4:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 23 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x400300000L) != 0L)
         {
            jjmatchedKind = 7;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x400300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 2:
         if ((active0 & 0x400300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active0 & 0x400300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 4:
         if ((active0 & 0x400300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 5:
         if ((active0 & 0x400300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 6:
         if ((active0 & 0x400300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 7:
         if ((active0 & 0x400300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 8:
         if ((active0 & 0x400300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 9:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 10:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 11:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 12:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0){
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 23);
      case 40:
         jjmatchedKind = 15;
         return jjMoveStringLiteralDfa1_1(0x400000L);
      case 41:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 17);
      case 45:
         return jjStopAtPos(0, 11);
      case 46:
         return jjStopAtPos(0, 9);
      case 58:
         return jjStopAtPos(0, 10);
      case 60:
         return jjStopAtPos(0, 18);
      case 61:
         return jjStopAtPos(0, 14);
      case 62:
         return jjStopAtPos(0, 19);
      case 64:
         return jjStopAtPos(0, 13);
      case 95:
         return jjStopAtPos(0, 12);
      case 98:
         return jjMoveStringLiteralDfa1_1(0x100000L);
      case 111:
         return jjMoveStringLiteralDfa1_1(0x200000L);
      case 114:
         return jjMoveStringLiteralDfa1_1(0x400000000L);
      default :
         return jjMoveNfa_1(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa2_1(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa2_1(active0, 0x400000000L);
      case 111:
         return jjMoveStringLiteralDfa2_1(active0, 0x100000L);
      case 118:
         return jjMoveStringLiteralDfa2_1(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private int jjMoveStringLiteralDfa2_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_1(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa3_1(active0, 0x200000L);
      case 108:
         return jjMoveStringLiteralDfa3_1(active0, 0x400000000L);
      case 117:
         return jjMoveStringLiteralDfa3_1(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_1(1, active0);
}
private int jjMoveStringLiteralDfa3_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_1(active0, 0x400000000L);
      case 100:
         return jjMoveStringLiteralDfa4_1(active0, 0x400000L);
      case 110:
         return jjMoveStringLiteralDfa4_1(active0, 0x100000L);
      case 114:
         return jjMoveStringLiteralDfa4_1(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_1(2, active0);
}
private int jjMoveStringLiteralDfa4_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa5_1(active0, 0x400000L);
      case 99:
         return jjMoveStringLiteralDfa5_1(active0, 0x100000L);
      case 108:
         return jjMoveStringLiteralDfa5_1(active0, 0x200000L);
      case 121:
         return jjMoveStringLiteralDfa5_1(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_1(3, active0);
}
private int jjMoveStringLiteralDfa5_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa6_1(active0, 0x400000000L);
      case 100:
         return jjMoveStringLiteralDfa6_1(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa6_1(active0, 0x100000L);
      case 111:
         return jjMoveStringLiteralDfa6_1(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_1(4, active0);
}
private int jjMoveStringLiteralDfa6_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_1(active0, 0x200000L);
      case 100:
         return jjMoveStringLiteralDfa7_1(active0, 0x100000L);
      case 101:
         return jjMoveStringLiteralDfa7_1(active0, 0x400000L);
      case 116:
         return jjMoveStringLiteralDfa7_1(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_1(5, active0);
}
private int jjMoveStringLiteralDfa7_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa8_1(active0, 0x100000L);
      case 100:
         return jjMoveStringLiteralDfa8_1(active0, 0x200000L);
      case 111:
         return jjMoveStringLiteralDfa8_1(active0, 0x400000000L);
      case 115:
         return jjMoveStringLiteralDfa8_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(6, active0);
}
private int jjMoveStringLiteralDfa8_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(8, 21);
         break;
      case 58:
         if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(8, 34);
         break;
      case 102:
         return jjMoveStringLiteralDfa9_1(active0, 0x100000L);
      case 116:
         return jjMoveStringLiteralDfa9_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(7, active0);
}
private int jjMoveStringLiteralDfa9_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(7, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa10_1(active0, 0x400000L);
      case 114:
         return jjMoveStringLiteralDfa10_1(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_1(8, active0);
}
private int jjMoveStringLiteralDfa10_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(8, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa11_1(active0, 0x400000L);
      case 111:
         return jjMoveStringLiteralDfa11_1(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_1(9, active0);
}
private int jjMoveStringLiteralDfa11_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(9, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(10, active0);
      return 11;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa12_1(active0, 0x400000L);
      case 109:
         return jjMoveStringLiteralDfa12_1(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_1(10, active0);
}
private int jjMoveStringLiteralDfa12_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(10, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(11, active0);
      return 12;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(12, 20);
         break;
      case 116:
         return jjMoveStringLiteralDfa13_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(11, active0);
}
private int jjMoveStringLiteralDfa13_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(11, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(12, active0);
      return 13;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa14_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(12, active0);
}
private int jjMoveStringLiteralDfa14_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(12, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(13, active0);
      return 14;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa15_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(13, active0);
}
private int jjMoveStringLiteralDfa15_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(13, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(14, active0);
      return 15;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa16_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(14, active0);
}
private int jjMoveStringLiteralDfa16_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(14, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(15, active0);
      return 16;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa17_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(15, active0);
}
private int jjMoveStringLiteralDfa17_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(15, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(16, active0);
      return 17;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa18_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(16, active0);
}
private int jjMoveStringLiteralDfa18_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(16, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(17, active0);
      return 18;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa19_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(17, active0);
}
private int jjMoveStringLiteralDfa19_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(17, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(18, active0);
      return 19;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa20_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(18, active0);
}
private int jjMoveStringLiteralDfa20_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(18, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(19, active0);
      return 20;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa21_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(19, active0);
}
private int jjMoveStringLiteralDfa21_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(19, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(20, active0);
      return 21;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa22_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(20, active0);
}
private int jjMoveStringLiteralDfa22_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(20, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(21, active0);
      return 22;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa23_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(21, active0);
}
private int jjMoveStringLiteralDfa23_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(21, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(22, active0);
      return 23;
   }
   switch(curChar)
   {
      case 120:
         return jjMoveStringLiteralDfa24_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(22, active0);
}
private int jjMoveStringLiteralDfa24_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(22, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(23, active0);
      return 24;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa25_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(23, active0);
}
private int jjMoveStringLiteralDfa25_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(23, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(24, active0);
      return 25;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa26_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(24, active0);
}
private int jjMoveStringLiteralDfa26_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(24, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(25, active0);
      return 26;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa27_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(25, active0);
}
private int jjMoveStringLiteralDfa27_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(25, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(26, active0);
      return 27;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa28_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(26, active0);
}
private int jjMoveStringLiteralDfa28_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(26, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(27, active0);
      return 28;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa29_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(27, active0);
}
private int jjMoveStringLiteralDfa29_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(27, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(28, active0);
      return 29;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa30_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(28, active0);
}
private int jjMoveStringLiteralDfa30_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(28, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(29, active0);
      return 30;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa31_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(29, active0);
}
private int jjMoveStringLiteralDfa31_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(29, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(30, active0);
      return 31;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa32_1(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_1(30, active0);
}
private int jjMoveStringLiteralDfa32_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(30, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(31, active0);
      return 32;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(32, 22);
         break;
      default :
         break;
   }
   return jjStartNfa_1(31, active0);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  { jjCheckNAdd(0); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjAddStates(5, 6); }
                  break;
               case 4:
                  if (curChar == 58)
                     kind = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  else if (curChar == 91)
                     { jjCheckNAdd(3); }
                  break;
               case 2:
                  if (curChar == 91)
                     { jjCheckNAdd(3); }
                  break;
               case 3:
                  if ((0x7fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(3, 5); }
                  break;
               case 5:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x800300000L) != 0L)
         {
            jjmatchedKind = 7;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x800300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 2:
         if ((active0 & 0x800300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active0 & 0x800300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 4:
         if ((active0 & 0x800300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 5:
         if ((active0 & 0x800300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 6:
         if ((active0 & 0x800300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 7:
         if ((active0 & 0x800300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 8:
         if ((active0 & 0x800300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 9:
         if ((active0 & 0x800100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 10:
         if ((active0 & 0x800100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 11:
         if ((active0 & 0x800100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 12:
         if ((active0 & 0x800100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 13:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 14:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 15:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 16:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 17:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 18:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 19:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 20:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 21:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 22:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 23);
      case 40:
         jjmatchedKind = 15;
         return jjMoveStringLiteralDfa1_0(0x400000L);
      case 41:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 17);
      case 45:
         return jjStopAtPos(0, 11);
      case 46:
         return jjStopAtPos(0, 9);
      case 58:
         return jjStopAtPos(0, 10);
      case 60:
         return jjStopAtPos(0, 18);
      case 61:
         return jjStopAtPos(0, 14);
      case 62:
         return jjStopAtPos(0, 19);
      case 64:
         return jjStopAtPos(0, 13);
      case 95:
         return jjStopAtPos(0, 12);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x100000L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x200000L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x800000000L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000L);
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000L);
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L);
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000L);
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000L);
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000L);
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000L);
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x400000L);
      case 116:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa8_0(active0, 0x100000L);
      case 100:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000L);
      case 115:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000L);
      case 121:
         return jjMoveStringLiteralDfa8_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(8, 21);
         break;
      case 45:
         return jjMoveStringLiteralDfa9_0(active0, 0x800000000L);
      case 102:
         return jjMoveStringLiteralDfa9_0(active0, 0x100000L);
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa10_0(active0, 0x800000000L);
      case 105:
         return jjMoveStringLiteralDfa10_0(active0, 0x400000L);
      case 114:
         return jjMoveStringLiteralDfa10_0(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x800400000L);
      case 111:
         return jjMoveStringLiteralDfa11_0(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0);
      return 11;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa12_0(active0, 0x400000L);
      case 109:
         return jjMoveStringLiteralDfa12_0(active0, 0x100000L);
      case 116:
         return jjMoveStringLiteralDfa12_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0);
      return 12;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(12, 20);
         break;
      case 105:
         return jjMoveStringLiteralDfa13_0(active0, 0x800000000L);
      case 116:
         return jjMoveStringLiteralDfa13_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0);
      return 13;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa14_0(active0, 0x400000L);
      case 115:
         return jjMoveStringLiteralDfa14_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0);
      return 14;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa15_0(active0, 0x400000L);
      case 112:
         return jjMoveStringLiteralDfa15_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0);
      return 15;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa16_0(active0, 0x800000000L);
      case 110:
         return jjMoveStringLiteralDfa16_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(14, active0);
}
private int jjMoveStringLiteralDfa16_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(14, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0);
      return 16;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa17_0(active0, 0x400000L);
      case 109:
         return jjMoveStringLiteralDfa17_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(15, active0);
}
private int jjMoveStringLiteralDfa17_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(15, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, active0);
      return 17;
   }
   switch(curChar)
   {
      case 58:
         return jjMoveStringLiteralDfa18_0(active0, 0x800000000L);
      case 109:
         return jjMoveStringLiteralDfa18_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(16, active0);
}
private int jjMoveStringLiteralDfa18_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(16, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(17, active0);
      return 18;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa19_0(active0, 0x800000000L);
      case 97:
         return jjMoveStringLiteralDfa19_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(17, active0);
}
private int jjMoveStringLiteralDfa19_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(17, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(18, active0);
      return 19;
   }
   switch(curChar)
   {
      case 83:
         return jjMoveStringLiteralDfa20_0(active0, 0x800000000L);
      case 105:
         return jjMoveStringLiteralDfa20_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(18, active0);
}
private int jjMoveStringLiteralDfa20_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(18, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(19, active0);
      return 20;
   }
   switch(curChar)
   {
      case 80:
         return jjMoveStringLiteralDfa21_0(active0, 0x800000000L);
      case 108:
         return jjMoveStringLiteralDfa21_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(19, active0);
}
private int jjMoveStringLiteralDfa21_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(19, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(20, active0);
      return 21;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa22_0(active0, 0x800000000L);
      case 98:
         return jjMoveStringLiteralDfa22_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(20, active0);
}
private int jjMoveStringLiteralDfa22_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(20, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(21, active0);
      return 22;
   }
   switch(curChar)
   {
      case 77:
         if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(22, 35);
         break;
      case 111:
         return jjMoveStringLiteralDfa23_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(21, active0);
}
private int jjMoveStringLiteralDfa23_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(21, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(22, active0);
      return 23;
   }
   switch(curChar)
   {
      case 120:
         return jjMoveStringLiteralDfa24_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(22, active0);
}
private int jjMoveStringLiteralDfa24_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(22, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(23, active0);
      return 24;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa25_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(23, active0);
}
private int jjMoveStringLiteralDfa25_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(23, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(24, active0);
      return 25;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa26_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(24, active0);
}
private int jjMoveStringLiteralDfa26_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(24, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(25, active0);
      return 26;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa27_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(25, active0);
}
private int jjMoveStringLiteralDfa27_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(25, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(26, active0);
      return 27;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa28_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(26, active0);
}
private int jjMoveStringLiteralDfa28_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(26, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(27, active0);
      return 28;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa29_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(27, active0);
}
private int jjMoveStringLiteralDfa29_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(27, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(28, active0);
      return 29;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa30_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(28, active0);
}
private int jjMoveStringLiteralDfa30_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(28, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(29, active0);
      return 30;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa31_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(29, active0);
}
private int jjMoveStringLiteralDfa31_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(29, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(30, active0);
      return 31;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa32_0(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(30, active0);
}
private int jjMoveStringLiteralDfa32_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(30, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(31, active0);
      return 32;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(32, 22);
         break;
      default :
         break;
   }
   return jjStartNfa_0(31, active0);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  { jjCheckNAdd(0); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjAddStates(5, 6); }
                  break;
               case 4:
                  if (curChar == 58)
                     kind = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  else if (curChar == 91)
                     { jjCheckNAdd(3); }
                  break;
               case 2:
                  if (curChar == 91)
                     { jjCheckNAdd(3); }
                  break;
               case 3:
                  if ((0x7fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(3, 5); }
                  break;
               case 5:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x60300000L) != 0L)
         {
            jjmatchedKind = 7;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x60300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 2:
         if ((active0 & 0x60300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active0 & 0x60300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 4:
         if ((active0 & 0x60300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 5:
         if ((active0 & 0x60300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 6:
         if ((active0 & 0x60300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 7:
         if ((active0 & 0x60300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 8:
         if ((active0 & 0x60300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 9:
         if ((active0 & 0x60100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 10:
         if ((active0 & 0x60100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 11:
         if ((active0 & 0x20100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 12:
         if ((active0 & 0x20100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 13:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 14:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 15:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 16:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 17:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 18:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 19:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 20:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 21:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 22:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 23:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 24:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 25:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 26:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 27:
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0){
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 23);
      case 40:
         jjmatchedKind = 15;
         return jjMoveStringLiteralDfa1_3(0x400000L);
      case 41:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 17);
      case 45:
         return jjStopAtPos(0, 11);
      case 46:
         return jjStopAtPos(0, 9);
      case 58:
         return jjStopAtPos(0, 10);
      case 60:
         return jjStopAtPos(0, 18);
      case 61:
         return jjStopAtPos(0, 14);
      case 62:
         return jjStopAtPos(0, 19);
      case 64:
         return jjStopAtPos(0, 13);
      case 83:
         return jjMoveStringLiteralDfa1_3(0x40000000L);
      case 95:
         return jjStopAtPos(0, 12);
      case 98:
         return jjMoveStringLiteralDfa1_3(0x100000L);
      case 111:
         return jjMoveStringLiteralDfa1_3(0x200000L);
      case 115:
         return jjMoveStringLiteralDfa1_3(0x20000000L);
      default :
         return jjMoveNfa_3(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 69:
         return jjMoveStringLiteralDfa2_3(active0, 0x40000000L);
      case 98:
         return jjMoveStringLiteralDfa2_3(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa2_3(active0, 0x20000000L);
      case 111:
         return jjMoveStringLiteralDfa2_3(active0, 0x100000L);
      case 118:
         return jjMoveStringLiteralDfa2_3(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_3(0, active0);
}
private int jjMoveStringLiteralDfa2_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 67:
         return jjMoveStringLiteralDfa3_3(active0, 0x40000000L);
      case 97:
         return jjMoveStringLiteralDfa3_3(active0, 0x400000L);
      case 99:
         return jjMoveStringLiteralDfa3_3(active0, 0x20000000L);
      case 101:
         return jjMoveStringLiteralDfa3_3(active0, 0x200000L);
      case 117:
         return jjMoveStringLiteralDfa3_3(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_3(1, active0);
}
private int jjMoveStringLiteralDfa3_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa4_3(active0, 0x40000000L);
      case 100:
         return jjMoveStringLiteralDfa4_3(active0, 0x400000L);
      case 110:
         return jjMoveStringLiteralDfa4_3(active0, 0x100000L);
      case 114:
         return jjMoveStringLiteralDfa4_3(active0, 0x200000L);
      case 117:
         return jjMoveStringLiteralDfa4_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(2, active0);
}
private int jjMoveStringLiteralDfa4_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa5_3(active0, 0x400000L);
      case 80:
         return jjMoveStringLiteralDfa5_3(active0, 0x40000000L);
      case 99:
         return jjMoveStringLiteralDfa5_3(active0, 0x100000L);
      case 108:
         return jjMoveStringLiteralDfa5_3(active0, 0x200000L);
      case 114:
         return jjMoveStringLiteralDfa5_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(3, active0);
}
private int jjMoveStringLiteralDfa5_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa6_3(active0, 0x40000000L);
      case 100:
         return jjMoveStringLiteralDfa6_3(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa6_3(active0, 0x100000L);
      case 105:
         return jjMoveStringLiteralDfa6_3(active0, 0x20000000L);
      case 111:
         return jjMoveStringLiteralDfa6_3(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_3(4, active0);
}
private int jjMoveStringLiteralDfa6_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 83:
         return jjMoveStringLiteralDfa7_3(active0, 0x40000000L);
      case 97:
         return jjMoveStringLiteralDfa7_3(active0, 0x200000L);
      case 100:
         return jjMoveStringLiteralDfa7_3(active0, 0x100000L);
      case 101:
         return jjMoveStringLiteralDfa7_3(active0, 0x400000L);
      case 116:
         return jjMoveStringLiteralDfa7_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(5, active0);
}
private int jjMoveStringLiteralDfa7_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa8_3(active0, 0x100000L);
      case 83:
         return jjMoveStringLiteralDfa8_3(active0, 0x40000000L);
      case 100:
         return jjMoveStringLiteralDfa8_3(active0, 0x200000L);
      case 115:
         return jjMoveStringLiteralDfa8_3(active0, 0x400000L);
      case 121:
         return jjMoveStringLiteralDfa8_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(6, active0);
}
private int jjMoveStringLiteralDfa8_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(8, 21);
         break;
      case 45:
         return jjMoveStringLiteralDfa9_3(active0, 0x20000000L);
      case 69:
         return jjMoveStringLiteralDfa9_3(active0, 0x40000000L);
      case 102:
         return jjMoveStringLiteralDfa9_3(active0, 0x100000L);
      case 116:
         return jjMoveStringLiteralDfa9_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(7, active0);
}
private int jjMoveStringLiteralDfa9_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(7, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 68:
         return jjMoveStringLiteralDfa10_3(active0, 0x40000000L);
      case 97:
         return jjMoveStringLiteralDfa10_3(active0, 0x20000000L);
      case 105:
         return jjMoveStringLiteralDfa10_3(active0, 0x400000L);
      case 114:
         return jjMoveStringLiteralDfa10_3(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_3(8, active0);
}
private int jjMoveStringLiteralDfa10_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(8, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(10, 30);
         break;
      case 110:
         return jjMoveStringLiteralDfa11_3(active0, 0x20400000L);
      case 111:
         return jjMoveStringLiteralDfa11_3(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_3(9, active0);
}
private int jjMoveStringLiteralDfa11_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(9, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(10, active0);
      return 11;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa12_3(active0, 0x400000L);
      case 109:
         return jjMoveStringLiteralDfa12_3(active0, 0x100000L);
      case 116:
         return jjMoveStringLiteralDfa12_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(10, active0);
}
private int jjMoveStringLiteralDfa12_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(10, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(11, active0);
      return 12;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(12, 20);
         break;
      case 105:
         return jjMoveStringLiteralDfa13_3(active0, 0x20000000L);
      case 116:
         return jjMoveStringLiteralDfa13_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(11, active0);
}
private int jjMoveStringLiteralDfa13_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(11, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(12, active0);
      return 13;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa14_3(active0, 0x400000L);
      case 118:
         return jjMoveStringLiteralDfa14_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(12, active0);
}
private int jjMoveStringLiteralDfa14_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(12, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(13, active0);
      return 14;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa15_3(active0, 0x20000000L);
      case 111:
         return jjMoveStringLiteralDfa15_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(13, active0);
}
private int jjMoveStringLiteralDfa15_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(13, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(14, active0);
      return 15;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa16_3(active0, 0x400000L);
      case 114:
         return jjMoveStringLiteralDfa16_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(14, active0);
}
private int jjMoveStringLiteralDfa16_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(14, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(15, active0);
      return 16;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa17_3(active0, 0x400000L);
      case 117:
         return jjMoveStringLiteralDfa17_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(15, active0);
}
private int jjMoveStringLiteralDfa17_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(15, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(16, active0);
      return 17;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa18_3(active0, 0x400000L);
      case 115:
         return jjMoveStringLiteralDfa18_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(16, active0);
}
private int jjMoveStringLiteralDfa18_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(16, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(17, active0);
      return 18;
   }
   switch(curChar)
   {
      case 58:
         return jjMoveStringLiteralDfa19_3(active0, 0x20000000L);
      case 97:
         return jjMoveStringLiteralDfa19_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(17, active0);
}
private int jjMoveStringLiteralDfa19_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(17, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(18, active0);
      return 19;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa20_3(active0, 0x20000000L);
      case 105:
         return jjMoveStringLiteralDfa20_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(18, active0);
}
private int jjMoveStringLiteralDfa20_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(18, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(19, active0);
      return 20;
   }
   switch(curChar)
   {
      case 73:
         return jjMoveStringLiteralDfa21_3(active0, 0x20000000L);
      case 108:
         return jjMoveStringLiteralDfa21_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(19, active0);
}
private int jjMoveStringLiteralDfa21_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(19, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(20, active0);
      return 21;
   }
   switch(curChar)
   {
      case 78:
         return jjMoveStringLiteralDfa22_3(active0, 0x20000000L);
      case 98:
         return jjMoveStringLiteralDfa22_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(20, active0);
}
private int jjMoveStringLiteralDfa22_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(20, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(21, active0);
      return 22;
   }
   switch(curChar)
   {
      case 70:
         return jjMoveStringLiteralDfa23_3(active0, 0x20000000L);
      case 111:
         return jjMoveStringLiteralDfa23_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(21, active0);
}
private int jjMoveStringLiteralDfa23_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(21, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(22, active0);
      return 23;
   }
   switch(curChar)
   {
      case 69:
         return jjMoveStringLiteralDfa24_3(active0, 0x20000000L);
      case 120:
         return jjMoveStringLiteralDfa24_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(22, active0);
}
private int jjMoveStringLiteralDfa24_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(22, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(23, active0);
      return 24;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa25_3(active0, 0x400000L);
      case 67:
         return jjMoveStringLiteralDfa25_3(active0, 0x20000000L);
      default :
         break;
   }
   return jjStartNfa_3(23, active0);
}
private int jjMoveStringLiteralDfa25_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(23, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(24, active0);
      return 25;
   }
   switch(curChar)
   {
      case 84:
         return jjMoveStringLiteralDfa26_3(active0, 0x20000000L);
      case 97:
         return jjMoveStringLiteralDfa26_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(24, active0);
}
private int jjMoveStringLiteralDfa26_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(24, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(25, active0);
      return 26;
   }
   switch(curChar)
   {
      case 69:
         return jjMoveStringLiteralDfa27_3(active0, 0x20000000L);
      case 100:
         return jjMoveStringLiteralDfa27_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(25, active0);
}
private int jjMoveStringLiteralDfa27_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(25, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(26, active0);
      return 27;
   }
   switch(curChar)
   {
      case 68:
         if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(27, 29);
         break;
      case 100:
         return jjMoveStringLiteralDfa28_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(26, active0);
}
private int jjMoveStringLiteralDfa28_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(26, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(27, active0);
      return 28;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa29_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(27, active0);
}
private int jjMoveStringLiteralDfa29_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(27, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(28, active0);
      return 29;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa30_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(28, active0);
}
private int jjMoveStringLiteralDfa30_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(28, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(29, active0);
      return 30;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa31_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(29, active0);
}
private int jjMoveStringLiteralDfa31_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(29, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(30, active0);
      return 31;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa32_3(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_3(30, active0);
}
private int jjMoveStringLiteralDfa32_3(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_3(30, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(31, active0);
      return 32;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(32, 22);
         break;
      default :
         break;
   }
   return jjStartNfa_3(31, active0);
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  { jjCheckNAdd(0); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjAddStates(5, 6); }
                  break;
               case 4:
                  if (curChar == 58)
                     kind = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  else if (curChar == 91)
                     { jjCheckNAdd(3); }
                  break;
               case 2:
                  if (curChar == 91)
                     { jjCheckNAdd(3); }
                  break;
               case 3:
                  if ((0x7fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(3, 5); }
                  break;
               case 5:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x200300000L) != 0L)
         {
            jjmatchedKind = 7;
            return -1;
         }
         if ((active0 & 0x40000L) != 0L)
            return 7;
         if ((active0 & 0x2000L) != 0L)
            return 9;
         return -1;
      case 1:
         if ((active0 & 0x200300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 2:
         if ((active0 & 0x200300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active0 & 0x200300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 4:
         if ((active0 & 0x200300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 5:
         if ((active0 & 0x200300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 6:
         if ((active0 & 0x200300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 7:
         if ((active0 & 0x200300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 8:
         if ((active0 & 0x200300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 9:
         if ((active0 & 0x200100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 10:
         if ((active0 & 0x200100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 11:
         if ((active0 & 0x200100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 12:
         if ((active0 & 0x200100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0){
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 23);
      case 40:
         jjmatchedKind = 15;
         return jjMoveStringLiteralDfa1_2(0x400000L);
      case 41:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 17);
      case 45:
         return jjStopAtPos(0, 11);
      case 46:
         return jjStopAtPos(0, 9);
      case 58:
         return jjStopAtPos(0, 10);
      case 60:
         return jjStartNfaWithStates_2(0, 18, 7);
      case 61:
         return jjStopAtPos(0, 14);
      case 62:
         return jjStopAtPos(0, 19);
      case 64:
         return jjStartNfaWithStates_2(0, 13, 9);
      case 95:
         return jjStopAtPos(0, 12);
      case 98:
         return jjMoveStringLiteralDfa1_2(0x100000L);
      case 109:
         return jjMoveStringLiteralDfa1_2(0x200000000L);
      case 111:
         return jjMoveStringLiteralDfa1_2(0x200000L);
      default :
         return jjMoveNfa_2(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa2_2(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa2_2(active0, 0x200000000L);
      case 111:
         return jjMoveStringLiteralDfa2_2(active0, 0x100000L);
      case 118:
         return jjMoveStringLiteralDfa2_2(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0);
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_2(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa3_2(active0, 0x200000L);
      case 115:
         return jjMoveStringLiteralDfa3_2(active0, 0x200000000L);
      case 117:
         return jjMoveStringLiteralDfa3_2(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_2(1, active0);
}
private int jjMoveStringLiteralDfa3_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_2(active0, 0x400000L);
      case 110:
         return jjMoveStringLiteralDfa4_2(active0, 0x100000L);
      case 114:
         return jjMoveStringLiteralDfa4_2(active0, 0x200000L);
      case 115:
         return jjMoveStringLiteralDfa4_2(active0, 0x200000000L);
      default :
         break;
   }
   return jjStartNfa_2(2, active0);
}
private int jjMoveStringLiteralDfa4_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa5_2(active0, 0x400000L);
      case 97:
         return jjMoveStringLiteralDfa5_2(active0, 0x200000000L);
      case 99:
         return jjMoveStringLiteralDfa5_2(active0, 0x100000L);
      case 108:
         return jjMoveStringLiteralDfa5_2(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_2(3, active0);
}
private int jjMoveStringLiteralDfa5_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa6_2(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa6_2(active0, 0x100000L);
      case 103:
         return jjMoveStringLiteralDfa6_2(active0, 0x200000000L);
      case 111:
         return jjMoveStringLiteralDfa6_2(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_2(4, active0);
}
private int jjMoveStringLiteralDfa6_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_2(active0, 0x200000L);
      case 100:
         return jjMoveStringLiteralDfa7_2(active0, 0x100000L);
      case 101:
         return jjMoveStringLiteralDfa7_2(active0, 0x200400000L);
      default :
         break;
   }
   return jjStartNfa_2(5, active0);
}
private int jjMoveStringLiteralDfa7_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa8_2(active0, 0x200100000L);
      case 100:
         return jjMoveStringLiteralDfa8_2(active0, 0x200000L);
      case 115:
         return jjMoveStringLiteralDfa8_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(6, active0);
}
private int jjMoveStringLiteralDfa8_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(8, 21);
         break;
      case 102:
         return jjMoveStringLiteralDfa9_2(active0, 0x200100000L);
      case 116:
         return jjMoveStringLiteralDfa9_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(7, active0);
}
private int jjMoveStringLiteralDfa9_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(7, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa10_2(active0, 0x400000L);
      case 114:
         return jjMoveStringLiteralDfa10_2(active0, 0x200100000L);
      default :
         break;
   }
   return jjStartNfa_2(8, active0);
}
private int jjMoveStringLiteralDfa10_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(8, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa11_2(active0, 0x400000L);
      case 111:
         return jjMoveStringLiteralDfa11_2(active0, 0x200100000L);
      default :
         break;
   }
   return jjStartNfa_2(9, active0);
}
private int jjMoveStringLiteralDfa11_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(9, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(10, active0);
      return 11;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa12_2(active0, 0x400000L);
      case 109:
         return jjMoveStringLiteralDfa12_2(active0, 0x200100000L);
      default :
         break;
   }
   return jjStartNfa_2(10, active0);
}
private int jjMoveStringLiteralDfa12_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(10, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(11, active0);
      return 12;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(12, 20);
         else if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(12, 33);
         break;
      case 116:
         return jjMoveStringLiteralDfa13_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(11, active0);
}
private int jjMoveStringLiteralDfa13_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(11, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(12, active0);
      return 13;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa14_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(12, active0);
}
private int jjMoveStringLiteralDfa14_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(12, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(13, active0);
      return 14;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa15_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(13, active0);
}
private int jjMoveStringLiteralDfa15_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(13, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(14, active0);
      return 15;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa16_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(14, active0);
}
private int jjMoveStringLiteralDfa16_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(14, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(15, active0);
      return 16;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa17_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(15, active0);
}
private int jjMoveStringLiteralDfa17_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(15, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(16, active0);
      return 17;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa18_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(16, active0);
}
private int jjMoveStringLiteralDfa18_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(16, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(17, active0);
      return 18;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa19_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(17, active0);
}
private int jjMoveStringLiteralDfa19_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(17, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(18, active0);
      return 19;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa20_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(18, active0);
}
private int jjMoveStringLiteralDfa20_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(18, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(19, active0);
      return 20;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa21_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(19, active0);
}
private int jjMoveStringLiteralDfa21_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(19, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(20, active0);
      return 21;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa22_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(20, active0);
}
private int jjMoveStringLiteralDfa22_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(20, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(21, active0);
      return 22;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa23_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(21, active0);
}
private int jjMoveStringLiteralDfa23_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(21, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(22, active0);
      return 23;
   }
   switch(curChar)
   {
      case 120:
         return jjMoveStringLiteralDfa24_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(22, active0);
}
private int jjMoveStringLiteralDfa24_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(22, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(23, active0);
      return 24;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa25_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(23, active0);
}
private int jjMoveStringLiteralDfa25_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(23, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(24, active0);
      return 25;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa26_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(24, active0);
}
private int jjMoveStringLiteralDfa26_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(24, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(25, active0);
      return 26;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa27_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(25, active0);
}
private int jjMoveStringLiteralDfa27_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(25, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(26, active0);
      return 27;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa28_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(26, active0);
}
private int jjMoveStringLiteralDfa28_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(26, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(27, active0);
      return 28;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa29_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(27, active0);
}
private int jjMoveStringLiteralDfa29_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(27, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(28, active0);
      return 29;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa30_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(28, active0);
}
private int jjMoveStringLiteralDfa30_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(28, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(29, active0);
      return 30;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa31_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(29, active0);
}
private int jjMoveStringLiteralDfa31_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(29, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(30, active0);
      return 31;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa32_2(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_2(30, active0);
}
private int jjMoveStringLiteralDfa32_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(30, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(31, active0);
      return 32;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(32, 22);
         break;
      default :
         break;
   }
   return jjStartNfa_2(31, active0);
}
private int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 13;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 6)
                        kind = 6;
                     { jjCheckNAdd(0); }
                  }
                  else if (curChar == 60)
                     { jjCheckNAdd(7); }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  { jjCheckNAdd(0); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjAddStates(5, 6); }
                  break;
               case 4:
                  if (curChar == 58)
                     kind = 8;
                  break;
               case 6:
                  if (curChar == 60)
                     { jjCheckNAdd(7); }
                  break;
               case 7:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  { jjCheckNAdd(7); }
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(9, 10); }
                  break;
               case 10:
                  if (curChar == 46)
                     { jjCheckNAdd(11); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 9); }
                  break;
               case 12:
                  if (curChar == 62)
                     kind = 32;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  else if (curChar == 64)
                     { jjCheckNAdd(9); }
                  else if (curChar == 91)
                     { jjCheckNAdd(3); }
                  break;
               case 2:
                  if (curChar == 91)
                     { jjCheckNAdd(3); }
                  break;
               case 3:
                  if ((0x7fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(3, 5); }
                  break;
               case 5:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 7:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 8:
                  if (curChar == 64)
                     { jjCheckNAdd(9); }
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(9, 10); }
                  break;
               case 11:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(7, 9); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 13 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_4(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x11300000L) != 0L)
         {
            jjmatchedKind = 7;
            return -1;
         }
         if ((active0 & 0x6000000L) != 0L)
         {
            jjmatchedKind = 7;
            return 16;
         }
         return -1;
      case 1:
         if ((active0 & 0x17300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 2:
         if ((active0 & 0x17300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active0 & 0x16300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 4:
         if ((active0 & 0x16300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 5:
         if ((active0 & 0x16300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 6:
         if ((active0 & 0x16300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 7:
         if ((active0 & 0x14300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 8:
         if ((active0 & 0x10300000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 9:
         if ((active0 & 0x10100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 10:
         if ((active0 & 0x10100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 11:
         if ((active0 & 0x10100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 12:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 7;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_4(int pos, long active0){
   return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_4(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 23);
      case 40:
         jjmatchedKind = 15;
         return jjMoveStringLiteralDfa1_4(0x400000L);
      case 41:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 17);
      case 45:
         return jjStopAtPos(0, 11);
      case 46:
         return jjStopAtPos(0, 9);
      case 58:
         return jjStopAtPos(0, 10);
      case 60:
         return jjStopAtPos(0, 18);
      case 61:
         return jjStopAtPos(0, 14);
      case 62:
         return jjStopAtPos(0, 19);
      case 64:
         return jjStopAtPos(0, 13);
      case 95:
         return jjStopAtPos(0, 12);
      case 98:
         return jjMoveStringLiteralDfa1_4(0x100000L);
      case 109:
         return jjMoveStringLiteralDfa1_4(0x1000000L);
      case 111:
         return jjMoveStringLiteralDfa1_4(0x200000L);
      case 115:
         return jjMoveStringLiteralDfa1_4(0x6000000L);
      case 117:
         return jjMoveStringLiteralDfa1_4(0x10000000L);
      default :
         return jjMoveNfa_4(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_4(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa2_4(active0, 0x400000L);
      case 109:
         return jjMoveStringLiteralDfa2_4(active0, 0x6000000L);
      case 111:
         return jjMoveStringLiteralDfa2_4(active0, 0x100000L);
      case 115:
         return jjMoveStringLiteralDfa2_4(active0, 0x11000000L);
      case 118:
         return jjMoveStringLiteralDfa2_4(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_4(0, active0);
}
private int jjMoveStringLiteralDfa2_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(2, 24);
         return jjMoveStringLiteralDfa3_4(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa3_4(active0, 0x10200000L);
      case 116:
         return jjMoveStringLiteralDfa3_4(active0, 0x6000000L);
      case 117:
         return jjMoveStringLiteralDfa3_4(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_4(1, active0);
}
private int jjMoveStringLiteralDfa3_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_4(active0, 0x400000L);
      case 110:
         return jjMoveStringLiteralDfa4_4(active0, 0x100000L);
      case 112:
         return jjMoveStringLiteralDfa4_4(active0, 0x6000000L);
      case 114:
         return jjMoveStringLiteralDfa4_4(active0, 0x10200000L);
      default :
         break;
   }
   return jjStartNfa_4(2, active0);
}
private int jjMoveStringLiteralDfa4_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa5_4(active0, 0x400000L);
      case 45:
         return jjMoveStringLiteralDfa5_4(active0, 0x16000000L);
      case 99:
         return jjMoveStringLiteralDfa5_4(active0, 0x100000L);
      case 108:
         return jjMoveStringLiteralDfa5_4(active0, 0x200000L);
      default :
         break;
   }
   return jjStartNfa_4(3, active0);
}
private int jjMoveStringLiteralDfa5_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa6_4(active0, 0x400000L);
      case 101:
         return jjMoveStringLiteralDfa6_4(active0, 0x100000L);
      case 105:
         return jjMoveStringLiteralDfa6_4(active0, 0x2000000L);
      case 109:
         return jjMoveStringLiteralDfa6_4(active0, 0x10000000L);
      case 111:
         return jjMoveStringLiteralDfa6_4(active0, 0x4200000L);
      default :
         break;
   }
   return jjStartNfa_4(4, active0);
}
private int jjMoveStringLiteralDfa6_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_4(active0, 0x10200000L);
      case 100:
         return jjMoveStringLiteralDfa7_4(active0, 0x100000L);
      case 101:
         return jjMoveStringLiteralDfa7_4(active0, 0x400000L);
      case 110:
         if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(6, 25);
         break;
      case 117:
         return jjMoveStringLiteralDfa7_4(active0, 0x4000000L);
      default :
         break;
   }
   return jjStartNfa_4(5, active0);
}
private int jjMoveStringLiteralDfa7_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa8_4(active0, 0x100000L);
      case 100:
         return jjMoveStringLiteralDfa8_4(active0, 0x200000L);
      case 105:
         return jjMoveStringLiteralDfa8_4(active0, 0x10000000L);
      case 115:
         return jjMoveStringLiteralDfa8_4(active0, 0x400000L);
      case 116:
         if ((active0 & 0x4000000L) != 0L)
            return jjStopAtPos(7, 26);
         break;
      default :
         break;
   }
   return jjStartNfa_4(6, active0);
}
private int jjMoveStringLiteralDfa8_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(6, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(7, active0);
      return 8;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(8, 21);
         break;
      case 102:
         return jjMoveStringLiteralDfa9_4(active0, 0x100000L);
      case 108:
         return jjMoveStringLiteralDfa9_4(active0, 0x10000000L);
      case 116:
         return jjMoveStringLiteralDfa9_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(7, active0);
}
private int jjMoveStringLiteralDfa9_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(7, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(8, active0);
      return 9;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa10_4(active0, 0x10000000L);
      case 105:
         return jjMoveStringLiteralDfa10_4(active0, 0x400000L);
      case 114:
         return jjMoveStringLiteralDfa10_4(active0, 0x100000L);
      default :
         break;
   }
   return jjStartNfa_4(8, active0);
}
private int jjMoveStringLiteralDfa10_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(8, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(9, active0);
      return 10;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa11_4(active0, 0x400000L);
      case 111:
         return jjMoveStringLiteralDfa11_4(active0, 0x10100000L);
      default :
         break;
   }
   return jjStartNfa_4(9, active0);
}
private int jjMoveStringLiteralDfa11_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(9, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(10, active0);
      return 11;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa12_4(active0, 0x400000L);
      case 109:
         return jjMoveStringLiteralDfa12_4(active0, 0x100000L);
      case 120:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(11, 28);
         break;
      default :
         break;
   }
   return jjStartNfa_4(10, active0);
}
private int jjMoveStringLiteralDfa12_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(10, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(11, active0);
      return 12;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(12, 20);
         break;
      case 116:
         return jjMoveStringLiteralDfa13_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(11, active0);
}
private int jjMoveStringLiteralDfa13_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(11, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(12, active0);
      return 13;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa14_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(12, active0);
}
private int jjMoveStringLiteralDfa14_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(12, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(13, active0);
      return 14;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa15_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(13, active0);
}
private int jjMoveStringLiteralDfa15_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(13, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(14, active0);
      return 15;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa16_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(14, active0);
}
private int jjMoveStringLiteralDfa16_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(14, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(15, active0);
      return 16;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa17_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(15, active0);
}
private int jjMoveStringLiteralDfa17_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(15, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(16, active0);
      return 17;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa18_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(16, active0);
}
private int jjMoveStringLiteralDfa18_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(16, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(17, active0);
      return 18;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa19_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(17, active0);
}
private int jjMoveStringLiteralDfa19_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(17, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(18, active0);
      return 19;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa20_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(18, active0);
}
private int jjMoveStringLiteralDfa20_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(18, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(19, active0);
      return 20;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa21_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(19, active0);
}
private int jjMoveStringLiteralDfa21_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(19, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(20, active0);
      return 21;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa22_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(20, active0);
}
private int jjMoveStringLiteralDfa22_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(20, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(21, active0);
      return 22;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa23_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(21, active0);
}
private int jjMoveStringLiteralDfa23_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(21, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(22, active0);
      return 23;
   }
   switch(curChar)
   {
      case 120:
         return jjMoveStringLiteralDfa24_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(22, active0);
}
private int jjMoveStringLiteralDfa24_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(22, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(23, active0);
      return 24;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa25_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(23, active0);
}
private int jjMoveStringLiteralDfa25_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(23, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(24, active0);
      return 25;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa26_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(24, active0);
}
private int jjMoveStringLiteralDfa26_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(24, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(25, active0);
      return 26;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa27_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(25, active0);
}
private int jjMoveStringLiteralDfa27_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(25, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(26, active0);
      return 27;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa28_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(26, active0);
}
private int jjMoveStringLiteralDfa28_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(26, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(27, active0);
      return 28;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa29_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(27, active0);
}
private int jjMoveStringLiteralDfa29_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(27, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(28, active0);
      return 29;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa30_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(28, active0);
}
private int jjMoveStringLiteralDfa30_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(28, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(29, active0);
      return 30;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa31_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(29, active0);
}
private int jjMoveStringLiteralDfa31_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(29, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(30, active0);
      return 31;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa32_4(active0, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_4(30, active0);
}
private int jjMoveStringLiteralDfa32_4(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_4(30, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(31, active0);
      return 32;
   }
   switch(curChar)
   {
      case 41:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(32, 22);
         break;
      default :
         break;
   }
   return jjStartNfa_4(31, active0);
}
private int jjMoveNfa_4(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 28;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  { jjCheckNAdd(0); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjAddStates(5, 6); }
                  break;
               case 4:
                  if (curChar == 58)
                     kind = 8;
                  break;
               case 9:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 20:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  else if (curChar == 91)
                     { jjCheckNAdd(3); }
                  if (curChar == 115)
                     { jjAddStates(10, 11); }
                  break;
               case 16:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 26;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 2:
                  if (curChar == 91)
                     { jjCheckNAdd(3); }
                  break;
               case 3:
                  if ((0x7fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(3, 5); }
                  break;
               case 5:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 115)
                     { jjAddStates(10, 11); }
                  break;
               case 7:
                  if (curChar == 110 && kind > 27)
                     kind = 27;
                  break;
               case 8:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 10:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 17:
                  if (curChar == 116 && kind > 27)
                     kind = 27;
                  break;
               case 18:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 28 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "\56", "\72", "\55", 
"\137", "\100", "\75", "\50", "\51", "\54", "\74", "\76", 
"\142\157\165\156\143\145\144\40\146\162\157\155\72", "\157\166\145\162\154\157\141\144\51", 
"\50\142\141\144\40\144\145\163\164\151\156\141\164\151\157\156\40\155\141\151\154\142\157\170\40\141\144\144\162\145\163\163\51", "\12", "\155\163\141", "\163\155\164\160\55\151\156", 
"\163\155\164\160\55\157\165\164", null, "\165\163\145\162\55\155\141\151\154\142\157\170", 
"\163\145\143\165\162\151\164\171\55\141\156\164\151\166\151\162\165\163\72\40\111\116\106\105\103\124\105\104", "\123\105\103\55\120\101\123\123\105\104\72", null, null, 
"\155\145\163\163\141\147\145\40\146\162\157\155\72", "\162\145\154\141\171\40\164\157\72", 
"\163\145\143\165\162\151\164\171\55\141\156\164\151\163\160\141\155\72\40\123\120\101\115", null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   6, 15, 22, 2, 4, 3, 5, 10, 11, 12, 16, 27, 
};

int curLexState = 5;
int defaultLexState = 5;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   switch(curLexState)
   {
     case 0:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       if (jjmatchedPos == 0 && jjmatchedKind > 36)
       {
          jjmatchedKind = 36;
       }
       break;
     case 1:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       if (jjmatchedPos == 0 && jjmatchedKind > 36)
       {
          jjmatchedKind = 36;
       }
       break;
     case 2:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       if (jjmatchedPos == 0 && jjmatchedKind > 36)
       {
          jjmatchedKind = 36;
       }
       break;
     case 3:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       if (jjmatchedPos == 0 && jjmatchedKind > 36)
       {
          jjmatchedKind = 36;
       }
       break;
     case 4:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_4();
       if (jjmatchedPos == 0 && jjmatchedKind > 36)
       {
          jjmatchedKind = 36;
       }
       break;
     case 5:
       try { input_stream.backup(0);
          while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_5();
       if (jjmatchedPos == 0 && jjmatchedKind > 36)
       {
          jjmatchedKind = 36;
       }
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public ParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public ParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 28; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 6 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "PASS",
   "OUT",
   "GEN",
   "SECURITY",
   "SERVER",
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, 5, 2, 
   2, 1, 3, 5, 5, 0, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0x1ffffffff1L, 
};
static final long[] jjtoSkip = {
   0xeL, 
};
static final long[] jjtoSpecial = {
   0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[28];
    private final int[] jjstateSet = new int[2 * 28];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
