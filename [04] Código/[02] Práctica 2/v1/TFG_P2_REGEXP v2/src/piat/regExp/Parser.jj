options
{
  STATIC = false;
  JAVA_TEMPLATE_TYPE = "modern";
  UNICODE_INPUT=true; // Permite reconocer caracteres Unicode sin que todo explote :) Especificar el encoding (UTF-8)
  DEBUG_PARSER = true;
  // DEBUG_LOOKAHEAD = true;
  DEBUG_TOKEN_MANAGER = true;
} 

PARSER_BEGIN(Parser)
package piat.javacc;
import java.util.concurrent.ConcurrentHashMap;
import java.util.regex.*;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;

public class Parser {
	AtomicInteger lineasCorrectas;
	AtomicInteger lineasIncorrectas;
	ConcurrentHashMap<String, String> hmServidores;
	ConcurrentHashMap <String,AtomicInteger> hmUsuarios;
	ConcurrentHashMap<String, Pattern> hmPatronesEstadisticasAgregadas;
	ConcurrentHashMap<String, AtomicInteger> hmEstadisticasAgregadas;

	void error_skipto(ParseException e ,int kind){
		Token t;
    	do {
        	t = getNextToken();
  		} while (t.kind != kind);
	}
}
PARSER_END(Parser)

<*>
SKIP :
{
  " "
| "\t" 
| "\n" 
| "\r"
}

// Formatos b√°sicos
TOKEN:
{
  < FECHA : (["0"-"9"]){4}"-"(["0"-"9"]){2}"-"(["0"-"9"]){2} >  // [0-9]{4}-[0-9]{2}-[0-9]{2}  
| < HORA : (["0"-"9"]){2}":"(["0"-"9"]){2}":"(["0"-"9"]){2} > //  \s[0-9]{2}:[0-9]{2}:[0-9]{2}
| < MSA : "msa" >
| < SMTP_IN : "smtp-in" >
| < SMTP_OUT : "smtp-out" >
| < SEC : ("security-in"|"security-out") >
| < TIPO : (["A"-"Z","a"-"z","-","_"])+ > 	// "([^0-9\\r\\n\\t\\f\\v ]+)"						
| < NUM : (["0"-"9"])+ >  // [0-9]+
| < ID : "["(["a"-"z","A"-"Z","0"-"9","_"])+"]" > : EN_TRAZA
// | < MENSAJE :  " ""["(["a"-"z","A"-"Z","0"-"9","_"])+"]:"(~["\r","\n"])* >  // \s\[\w+\]:.*
| < EOL : ("\r\n" | "\n\r" | "\r" | "\n") >
}

< EN_TRAZA >
TOKEN : 
{
	< INFECTED : "INFECTED" >
	| < SPAM: "SPAM" > 
	| < OVERLOAD : "overload" > 
	| < BAD : "bad" >
	| < REMIT : "<"(["A"-"Z","a"-"z","0"-"9","_",".","-"])+ > 
	| < DOM : "@"(["A"-"Z","a"-"z","0"-"9","_"])+("."(["A"-"Z","a"-"z","0"-"9","_"])+)+">" >
	| < COLON : ":">
	
}

// TOKEN : 
// { 
//   < FECHA : (["0"-"9"]){4}"-"(["0"-"9"]){2}"-"(["0"-"9"]){2} >  // [0-9]{4}-[0-9]{2}-[0-9]{2}  
// | < HORA : (["0"-"9"]){2}":"(["0"-"9"]){2}":"(["0"-"9"]){2} > //  \s[0-9]{2}:[0-9]{2}:[0-9]{2}
// | < TIPO_SERVIDOR : (["A"-"Z","a"-"z","-","_"])+ > 							
// | < NUMERO_SERVIDOR : (["0"-"9"])+ >  // [0-9]+
// }


void parse(AtomicInteger lineasCorrectas,AtomicInteger lineasIncorrectas,ConcurrentHashMap<String, String> hmServidores,ConcurrentHashMap <String,AtomicInteger> hmUsuarios,ConcurrentHashMap<String, Pattern> hmPatronesEstadisticasAgregadas,ConcurrentHashMap<String, AtomicInteger> hmEstadisticasAgregadas) :
{
  this.lineasCorrectas = lineasCorrectas;
  this.lineasIncorrectas = lineasIncorrectas;
  this.hmServidores = hmServidores;
  this.hmUsuarios = hmUsuarios;
  this.hmPatronesEstadisticasAgregadas = hmPatronesEstadisticasAgregadas;
  this.hmEstadisticasAgregadas = hmEstadisticasAgregadas;
}
{ 
	(traza())*
	<EOF>
}

void traza():
{
	Token f,h;
}
{
	// try {
		f=<FECHA>h=<HORA>tipoTraza() 
	// } catch (ParseException e) {
	// 	lineasIncorrectas.incrementAndGet();
	// 	error_skipto(e,EOL);
	// } 
}

void tipoTraza():
{}
{
	( msa() 
	| smtp_in() 
	| smtp_out()
	| security()
	| trazaGenerica())
}

// msa1 [45E97F04]: message from: <graciela.rivas@etsist.upm.es> to: <elvira.lorente@golondrina.frangipani.in> message-id: <69583704@f53.etsist.upm.es> size: 5284405
void msa():
{}
{
	<MSA><NUM><ID><COLON>intento()

}

void intento():
{
	String r,d,i,s;
}
{
	r = messageFrom()
	d = messageTo() 
	i = messageId()  
	s = size()
}

// 	message from: <isabel.bermejo@etsist.upm.es> 
String messageFrom():
{
	Token r,d;
}
{
	"message-from: <" r=<REMIT> d=<DOM> ">"{
		return r.image+d.image;
	}
}

// to: <emilia.bravo@bisonte.seafortia.gy> 
String messageTo():
{
	Token r,d;
}
{
	"to: <" r=<REMIT> d=<DOM> ">"{
		return r.image+d.image;
	}
}

// message-id: <54892578@magritte.etsist.upm.es> 
String messageId():
{
	Token i;
}
{
	"message-id:" i=<ID>{
		return i.image;
	}
}

// size: 4373
String size():
{
	Token s;
}
{
	"size:" s=<NUM>{
		return s.image;
	}
}

// smtp-in1 [C2A4432A]: message from: <benito.gallego@jambolero.gh> to: <eloisa.blasco@etsist.upm.es> message-id: <53594797@oldenburg.jambolero.gh> size: 50959
void smtp_in():
{}
{
  	<SMTP_IN><NUM><ID><COLON>mensaje()
}

void mensaje():
{}
{
	intento()
}

// 2020-02-21 10:24:04 smtp-out1 [647EF948]: relay to: mail1.hipocampo.cocotero.mz
void smtp_out():
{}
{
	<SMTP_OUT><NUM><ID><COLON>enviado()
}

void enviado():
{} 
{
	"relay to:"<ID>
}

// security-in1 [AAA89EAC]: SEC-PASSED: security-antivirus: CLEAN security-antispam: HAM
void security():
{} 
{
	<SEC><NUM><ID><COLON>(   inf()
						|spam()
						|over()
						|bad() )
} 

void inf(): 
{}
{
	"security-antivirus:" <INFECTED>
}

void spam():
{}
{
	"SEC-PASSED: security-antispam:"  <SPAM>
}

void over():
{}
{ 
	<OVERLOAD>
}

void bad():
{}
{
	<BAD>"destination mailbox address"
}

void trazaGenerica():
{}
{
	<TIPO><NUM><ID><COLON>(<UNEXPECTED>)+<EOL>
}

<*> TOKEN : { <UNEXPECTED: ~[] > }